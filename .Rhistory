mutate(`%_BNF` = ifelse(`%_BNF` > 99.98, 100, `%_BNF`)) %>%
select(governorate, district, `comm.` = communities, partners,
households, beneficiaries, total_usd, `%_BNF`) %>%
flextable() %>%
set_caption(paste0(
round(sum_stats$beneficiaries, digits = -3) %>% format(big.mark = ","),
" people reached with MPC, USD ",
paste(format(round((sum_stats %>% pull(total_usd)) / 1000000, 1), trim = TRUE), "million"),
" disbursed, ",
report_date)) %>%
theme_zebra() %>%
#  footnote(i = 1, j = 6, part = "header", ref_symbols = "a",
#           as_paragraph("Beneficiary figures include only reported MPC with a minimum transfer value #of USD 100")) %>%
footnote(i = 1, j = 8, part = "header", ref_symbols = "1",
as_paragraph("As percentage of all MPC beneficiaries reached in NW Syria")) %>%
set_table_properties(layout = "autofit", width = .99)
cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose")) %>%
group_by(currency) %>%
summarise(total_usd = sum(total_usd, na.rm = TRUE)) %>%
mutate(`%_of_total` = round(total_usd / sum(total_usd) * 100,
digits = 2))
cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose")) %>%
group_by(currency) %>%
summarise(total_usd = sum(total_usd, na.rm = TRUE)) %>%
mutate(`%_of_total` = round(total_usd / sum(total_usd) * 100,
digits = 2)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Proportion of cash disbursed by currency") %>%
set_table_properties(layout = "autofit", width = .6)
cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose")) %>%
group_by(currency) %>%
summarise(total_usd = sum(total_usd, na.rm = TRUE)) %>%
mutate(`%_of_total` = round(total_usd / sum(total_usd) * 100,
digits = 2)) %>%
adorn_totals("row") %>%
flextable() %>%
theme_zebra() %>%
set_caption("Proportion of cash disbursed by currency") %>%
set_table_properties(layout = "autofit", width = .6)
cbr <- read_csv("./data/cbr_com.csv") %>%
mutate(month = month(end_date)) %>%
replace_na(list(beneficiaries = 0)) %>%
# Irritating that this recoding has to be done outside of the
# read_4ws function, but it'll throw an error otherwise, since
# ?some? partners have left some of these columns entirely blank?
# Not sure what the casue of the error is and
# I have no time to fix it now
mutate(governorate = recode(governorate,
"aleppo" = "Aleppo",
"ALEPPO" = "Aleppo"),
district = recode(district,
"Jabal Samman" = "Jebel Saman",
"azaz" = "A'zaz",
"jarablus" = "Jarablus"),
sub_district = recode(sub_district,
"azaz" = "A'zaz",
"jarablus" = "Jarablus"),
# Doing this because Ar-Raqqa has never appeared before
previously_assisted = ifelse(admin1pcode %in% c("SY11"),
"No",
previously_assisted))
cbr  %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose")) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(implementing_partner),
communities = n_distinct(admin4pcode),
households = sum(families, na.rm = TRUE),
beneficiaries = sum(beneficiaries[previously_assisted == "No"], na.rm = TRUE),
total_usd = sum(total_usd, na.rm = TRUE),
.groups = "drop") %>%
ungroup() %>%
mutate(`%_BNF` =
round(beneficiaries / sum(beneficiaries, na.rm = TRUE) * 100, digits = 2),
total_usd = round(total_usd)) %>%
adorn_totals("row",,,, households, beneficiaries, total_usd, `%_BNF`) %>%
mutate(`%_BNF` = ifelse(`%_BNF` > 99.98, 100, `%_BNF`)) %>%
select(governorate, district, `comm.` = communities, partners,
households, beneficiaries, total_usd, `%_BNF`) %>%
flextable() %>%
set_caption(paste0(
round(sum_stats$beneficiaries, digits = -3) %>% format(big.mark = ","),
" people reached with MPC, USD ",
paste(format(round((sum_stats %>% pull(total_usd)) / 1000000, 1), trim = TRUE), "million"),
" disbursed, ",
report_date)) %>%
theme_zebra() %>%
#  footnote(i = 1, j = 6, part = "header", ref_symbols = "a",
#           as_paragraph("Beneficiary figures include only reported MPC with a minimum transfer value #of USD 100")) %>%
footnote(i = 1, j = 8, part = "header", ref_symbols = "1",
as_paragraph("As percentage of all MPC beneficiaries reached in NW Syria")) %>%
set_table_properties(layout = "autofit", width = .99)
cbr  %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose")) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(implementing_partner),
communities = n_distinct(admin4pcode),
households = sum(families, na.rm = TRUE),
beneficiaries = sum(beneficiaries[previously_assisted == "No"], na.rm = TRUE),
total_usd = sum(total_usd, na.rm = TRUE),
.groups = "drop") %>%
ungroup() %>%
mutate(`%_BNF` =
round(beneficiaries / sum(beneficiaries, na.rm = TRUE) * 100, digits = 2),
total_usd = round(total_usd)) %>%
adorn_totals("row",,,, households, beneficiaries, total_usd, `%_BNF`) %>%
mutate(`%_BNF` = ifelse(`%_BNF` > 99.98, 100, `%_BNF`)) %>%
select(governorate, district, `comm.` = communities, partners,
households, beneficiaries, total_usd, `%_BNF`) %>%
flextable() %>%
set_caption(paste0(
round(sum_stats$beneficiaries, digits = -3) %>% format(big.mark = ","),
" people reached with MPC, USD ",
paste(format(round((sum_stats %>% pull(total_usd)) / 1000000, 1), trim = TRUE), "million"),
" disbursed, ",
report_date)) %>%
theme_zebra() %>%
#  footnote(i = 1, j = 6, part = "header", ref_symbols = "a",
#           as_paragraph("Beneficiary figures include only reported MPC with a minimum transfer value #of USD 100")) %>%
footnote(i = 1, j = 8, part = "header", ref_symbols = "1",
as_paragraph("As percentage of all MPC beneficiaries reached in NW Syria")) %>%
set_table_properties(layout = "autofit", width = .99)
cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose")) %>%
group_by(currency) %>%
summarise(total_usd = sum(total_usd, na.rm = TRUE)) %>%
# doing this entirely for rounding reasons, because of
# FX stuff, there's one extra dollar
mutate(total_usd = ifelse(currency == "USD", total_usd - 1, total_usd)) %>%
mutate(`%_of_total` = round(total_usd / sum(total_usd) * 100,
digits = 2)) %>%
adorn_totals("row") %>%
flextable() %>%
theme_zebra() %>%
set_caption("Proportion of cash disbursed by currency") %>%
set_table_properties(layout = "autofit", width = .6)
currency_table <- cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose")) %>%
group_by(currency) %>%
summarise(total_usd = sum(total_usd, na.rm = TRUE)) %>%
# doing this entirely for rounding reasons, because of
# FX stuff, there's one extra dollar
mutate(total_usd = ifelse(currency == "USD", total_usd - 1, total_usd)) %>%
mutate(`%_of_total` = round(total_usd / sum(total_usd) * 100,
digits = 2))
currency_table %>%
adorn_totals("row") %>%
flextable() %>%
theme_zebra() %>%
set_caption("Proportion of cash disbursed by currency") %>%
set_table_properties(layout = "autofit", width = .6)
filter(currency_table, currency == "USD") %>% pull(`%_of_total`)
eq %>%
left_join(hno %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
admin3pcode),
by = "admin3pcode") %>%
filter(admin3pcode %in% nw_pcode3 &
district %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate, district, sub_district, admin3pcode) %>%
summarise(wounded_dead = sum(wounded_dead, na.rm = TRUE),
damaged_houses = sum(damaged_houses, na.rm = TRUE)) %>%
left_join(hno %>%
filter(admin3pcode %in% nw_pcode3 |
admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(admin3pcode) %>%
summarise(population = sum(total_population, na.rm = TRUE)),
by = "admin3pcode") %>%
mutate(wounded_dead_100k = round(wounded_dead / population * 100000, digits = 2),
damaged_houses_100k = round(damaged_houses / population * 100000, digits = 2)) %>%
left_join(cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)),
by = "admin3pcode") %>%
ggplot(aes(x = damaged_houses, y = wounded_dead)) +
geom_point(aes(size = wounded_dead_100k,
colour = beneficiaries)) +
geom_text_repel(aes(label = sub_district),
point.padding = .5,
segment.color = "grey50", size = 3) +
scale_x_log10(labels = comma) +
scale_y_log10(labels = comma) +
scale_colour_viridis(option = "mako", direction = -1,
labels = comma) +
scale_size(breaks = c(0, 100, 500, 1000, 3000)) +
labs(x = "Number of damaged houses",
y = "Number of wounded and dead",
title = "Magnitude of earthquake impacts by sub-district",
subtitle = "Size shows intensity (wounded/dead per 100k) and colour shows beneficiaries",
size = "Wounded/dead\nper 100k",
colour = "Beneficiaries",
caption = "Data from CWG, FSL and ACU")
eq %>%
left_join(hno %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
admin3pcode),
by = "admin3pcode") %>%
filter(admin3pcode %in% nw_pcode3 &
district %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate, district, sub_district, admin3pcode) %>%
summarise(wounded_dead = sum(wounded_dead, na.rm = TRUE),
damaged_houses = sum(damaged_houses, na.rm = TRUE)) %>%
left_join(hno %>%
filter(admin3pcode %in% nw_pcode3 |
admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(admin3pcode) %>%
summarise(population = sum(total_population, na.rm = TRUE)),
by = "admin3pcode") %>%
mutate(wounded_dead_100k = round(wounded_dead / population * 100000, digits = 2),
damaged_houses_100k = round(damaged_houses / population * 100000, digits = 2)) %>%
left_join(cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)),
by = "admin3pcode") %>%
ggplot(aes(x = damaged_houses, y = wounded_dead)) +
geom_point(aes(size = wounded_dead_100k,
colour = beneficiaries)) +
geom_text_repel(aes(label = sub_district),
point.padding = .5,
segment.color = "grey50", size = 3) +
scale_x_log10(labels = comma) +
scale_y_log10(labels = comma) +
scale_colour_viridis(option = "mako", direction = -1,
labels = comma,
breaks = c(10000, 20000, 50000, 75000, 100000)) +
scale_size(breaks = c(0, 100, 500, 1000, 3000)) +
labs(x = "Number of damaged houses",
y = "Number of wounded and dead",
title = "Magnitude of earthquake impacts by sub-district",
subtitle = "Size shows intensity (wounded/dead per 100k) and colour shows beneficiaries",
size = "Wounded/dead\nper 100k",
colour = "Beneficiaries",
caption = "Data from CWG, FSL and ACU")
eq %>%
left_join(hno %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
admin3pcode),
by = "admin3pcode") %>%
filter(admin3pcode %in% nw_pcode3 &
district %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate, district, sub_district, admin3pcode) %>%
summarise(wounded_dead = sum(wounded_dead, na.rm = TRUE),
damaged_houses = sum(damaged_houses, na.rm = TRUE)) %>%
left_join(hno %>%
filter(admin3pcode %in% nw_pcode3 |
admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(admin3pcode) %>%
summarise(population = sum(total_population, na.rm = TRUE)),
by = "admin3pcode") %>%
mutate(wounded_dead_100k = round(wounded_dead / population * 100000, digits = 2),
damaged_houses_100k = round(damaged_houses / population * 100000, digits = 2)) %>%
left_join(cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)),
by = "admin3pcode") %>%
ggplot(aes(x = damaged_houses, y = wounded_dead)) +
geom_point(aes(size = wounded_dead_100k,
colour = beneficiaries)) +
geom_text_repel(aes(label = sub_district),
point.padding = .5,
segment.color = "grey50", size = 3) +
scale_x_log10(labels = comma) +
scale_y_log10(labels = comma) +
scale_colour_viridis(option = "mako", direction = -1,
labels = comma,
breaks = c(1000, 20000, 50000, 75000, 90000)) +
scale_size(breaks = c(0, 100, 500, 1000, 3000)) +
labs(x = "Number of damaged houses",
y = "Number of wounded and dead",
title = "Magnitude of earthquake impacts by sub-district",
subtitle = "Size shows intensity (wounded/dead per 100k) and colour shows beneficiaries",
size = "Wounded/dead\nper 100k",
colour = "Beneficiaries",
caption = "Data from CWG, FSL and ACU")
eq %>%
left_join(hno %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
admin3pcode),
by = "admin3pcode") %>%
filter(admin3pcode %in% nw_pcode3 &
district %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate, district, sub_district, admin3pcode) %>%
summarise(wounded_dead = sum(wounded_dead, na.rm = TRUE),
damaged_houses = sum(damaged_houses, na.rm = TRUE)) %>%
left_join(hno %>%
filter(admin3pcode %in% nw_pcode3 |
admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(admin3pcode) %>%
summarise(population = sum(total_population, na.rm = TRUE)),
by = "admin3pcode") %>%
mutate(wounded_dead_100k = round(wounded_dead / population * 100000, digits = 2),
damaged_houses_100k = round(damaged_houses / population * 100000, digits = 2)) %>%
left_join(cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)),
by = "admin3pcode") %>%
ggplot(aes(x = damaged_houses, y = wounded_dead)) +
geom_point(aes(size = wounded_dead_100k,
colour = beneficiaries)) +
geom_text_repel(aes(label = sub_district),
point.padding = .5,
segment.color = "grey50", size = 3) +
scale_x_log10(labels = comma) +
scale_y_log10(labels = comma) +
scale_colour_viridis(option = "mako", direction = -1,
labels = comma,
breaks = c(1000, 20000, 50000, 75000, 95000)) +
scale_size(breaks = c(0, 100, 500, 1000, 3000)) +
labs(x = "Number of damaged houses",
y = "Number of wounded and dead",
title = "Magnitude of earthquake impacts by sub-district",
subtitle = "Size shows intensity (wounded/dead per 100k) and colour shows beneficiaries",
size = "Wounded/dead\nper 100k",
colour = "Beneficiaries",
caption = "Data from CWG, FSL and ACU")
eq %>%
left_join(hno %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
admin3pcode),
by = "admin3pcode") %>%
filter(admin3pcode %in% nw_pcode3 &
district %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate, district, sub_district, admin3pcode) %>%
summarise(wounded_dead = sum(wounded_dead, na.rm = TRUE),
damaged_houses = sum(damaged_houses, na.rm = TRUE)) %>%
left_join(hno %>%
filter(admin3pcode %in% nw_pcode3 |
admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(admin3pcode) %>%
summarise(population = sum(total_population, na.rm = TRUE)),
by = "admin3pcode") %>%
mutate(wounded_dead_100k = round(wounded_dead / population * 100000, digits = 2),
damaged_houses_100k = round(damaged_houses / population * 100000, digits = 2)) %>%
left_join(cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)),
by = "admin3pcode") %>%
ggplot(aes(x = damaged_houses_100k, y = wounded_dead_100k)) +
geom_point(aes(size = wounded_dead_100k,
colour = beneficiaries)) +
geom_text_repel(aes(label = sub_district),
point.padding = .5,
segment.color = "grey50", size = 3) +
scale_x_log10(labels = comma) +
scale_y_log10(labels = comma) +
scale_colour_viridis(option = "mako", direction = -1,
labels = comma,
breaks = c(1000, 20000, 50000, 75000, 95000)) +
scale_size(breaks = c(0, 100, 500, 1000, 3000)) +
labs(x = "Number of damaged houses",
y = "Number of wounded and dead",
title = "Magnitude of earthquake impacts by sub-district",
subtitle = "Size shows intensity (wounded/dead per 100k) and colour shows beneficiaries",
size = "Wounded/dead\nper 100k",
colour = "Beneficiaries",
caption = "Data from CWG, FSL and ACU")
eq %>%
left_join(hno %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
admin3pcode),
by = "admin3pcode") %>%
filter(admin3pcode %in% nw_pcode3 &
district %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate, district, sub_district, admin3pcode) %>%
summarise(wounded_dead = sum(wounded_dead, na.rm = TRUE),
damaged_houses = sum(damaged_houses, na.rm = TRUE)) %>%
left_join(hno %>%
filter(admin3pcode %in% nw_pcode3 |
admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(admin3pcode) %>%
summarise(population = sum(total_population, na.rm = TRUE)),
by = "admin3pcode") %>%
mutate(wounded_dead_100k = round(wounded_dead / population * 100000, digits = 2),
damaged_houses_100k = round(damaged_houses / population * 100000, digits = 2)) %>%
left_join(cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)),
by = "admin3pcode") %>%
ggplot(aes(x = damaged_houses_100k, y = wounded_dead_100k)) +
geom_point(aes(size = wounded_dead,
colour = beneficiaries)) +
geom_text_repel(aes(label = sub_district),
point.padding = .5,
segment.color = "grey50", size = 3) +
scale_x_log10(labels = comma) +
scale_y_log10(labels = comma) +
scale_colour_viridis(option = "mako", direction = -1,
labels = comma,
breaks = c(1000, 20000, 50000, 75000, 95000)) +
scale_size(breaks = c(0, 100, 500, 1000, 3000)) +
labs(x = "Number of damaged houses",
y = "Number of wounded and dead",
title = "Magnitude of earthquake impacts by sub-district",
subtitle = "Size shows intensity (wounded/dead per 100k) and colour shows beneficiaries",
size = "Wounded/dead\nper 100k",
colour = "Beneficiaries",
caption = "Data from CWG, FSL and ACU")
eq %>%
left_join(hno %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
admin3pcode),
by = "admin3pcode") %>%
filter(admin3pcode %in% nw_pcode3 &
district %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate, district, sub_district, admin3pcode) %>%
summarise(wounded_dead = sum(wounded_dead, na.rm = TRUE),
damaged_houses = sum(damaged_houses, na.rm = TRUE)) %>%
left_join(hno %>%
filter(admin3pcode %in% nw_pcode3 |
admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(admin3pcode) %>%
summarise(population = sum(total_population, na.rm = TRUE)),
by = "admin3pcode") %>%
mutate(wounded_dead_100k = round(wounded_dead / population * 100000, digits = 2),
damaged_houses_100k = round(damaged_houses / population * 100000, digits = 2)) %>%
left_join(cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)),
by = "admin3pcode") %>%
ggplot(aes(x = damaged_houses_100k, y = wounded_dead_100k)) +
geom_point(aes(size = damaged_houses,
colour = beneficiaries)) +
geom_text_repel(aes(label = sub_district),
point.padding = .5,
segment.color = "grey50", size = 3) +
scale_x_log10(labels = comma) +
scale_y_log10(labels = comma) +
scale_colour_viridis(option = "mako", direction = -1,
labels = comma,
breaks = c(1000, 20000, 50000, 75000, 95000)) +
scale_size(breaks = c(0, 100, 500, 1000, 3000)) +
labs(x = "Damaged houses per 100k",
y = "Wounded and dead per 100k",
title = "Intensity of earthquake impacts by sub-district",
subtitle = "Size shows number of damaged houses and colour shows beneficiaries",
size = "Damaged/\nhouses",
colour = "Beneficiaries",
caption = "Data from CWG, FSL and ACU") +
theme(plot.caption = element_text(hjust = .5))
